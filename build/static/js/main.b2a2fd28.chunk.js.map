{"version":3,"sources":["utils/i18n.tsx","contexts/global.tsx","components/_textField.tsx","utils/enums.tsx","components/image.tsx","globalStyles/index.tsx","utils/constants.tsx","utils/functions.tsx","utils/api.tsx","routes/home/modalItem.tsx","routes/home/index.tsx","components/appbar.tsx","utils/models.tsx","modals/register.tsx","modals/login.tsx","routes/container.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["resources","en","translation","es","i18n","use","detector","reactI18nextModule","init","lng","navigator","language","userLanguage","fallbackLng","keySeparator","interpolation","escapeValue","GlobalContext","createContext","TextField","COLORS","Routes","Keys","props","_onChange","e","onChange","name","target","value","console","warn","error","naked","InputBase","type","password","placeholder","multiline","rows","fullWidth","fullwidth","size","Grid","item","xs","sm","Number","InputProps","readOnly","disabled","InputLabelProps","shrink","fixedLabel","variant","label","Image","src","url","width","height","style","RowView","styled","div","display","flexDirection","flexWrap","NavigationView","flex","ContentView","padding","Subtitle","h5","margin","color","undefined","fontWeight","bold","marginLeft","textAlign","centered","Price","CASH","fontSize","Body","p","Title","h1","clickeable","PRIMARY","cursor","Content","alignItems","justifyContent","View","column","row","backgroundColor","fullsize","borderRadius","opacity","marginRight","marginTop","button","wrap","Separator","boxShadow","GetStorage","key","window","localStorage","getItem","setContext","context","obj","user","getProducts","search","minPrice","maxPrice","a","axios","get","params","data","product","callback","post","email","then","res","catch","err","alert","form","result","withNamespaces","useState","materials","setMaterials","images","setImages","t","Dialog","open","onClose","onEntering","selectedItem","forEach","Picture","push","original","thumbnail","thumbnails","small","maxWidth","DialogContent","container","spacing","items","Name","Type","Description","substring","Button","onClick","sendEmail","toast","msg","DialogActions","itemModal","setItemModal","lowPrice","highPrice","inputs","setInputs","setSelectedItem","setData","backupData","setBackupData","loading","setLoading","useEffect","log","getData","onFilter","_data","length","handleInputs","Fragment","justify","Paper","IconButton","low","parseInt","high","toString","filter","isNaN","Icon","CircularProgress","map","marginBottom","GRAY","large","DARK_GRAY","RED","substr","onViewMore","useStyles","makeStyles","theme","root","flexGrow","menuButton","title","CustomAppBar","classes","className","AppBar","position","Toolbar","Typography","rightButtons","text","models","register","firstName","lastName","username","login","setForm","requestRegister","globalContext","useContext","requestLogin","setItem","logged","modals","setModals","appbarButtons","setAppbarButtons","buttons","logout","openModal","removeItem","closeModal","path","exact","component","Home","App","auxSetContext","object","Provider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","rel","href","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b2a2fd28.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport detector from \"i18next-browser-languagedetector\";\r\nimport { reactI18nextModule } from \"react-i18next\";\r\n\r\nimport translationEN from './locales/en/translation.json';\r\nimport translationES from './locales/es/translation.json';\r\n\r\n// the translations\r\nconst resources = {\r\n  en: {\r\n    translation: translationEN\r\n  },\r\n  es: {\r\n    translation: translationES\r\n  }\r\n};\r\n\r\ni18n\r\n  .use(detector)\r\n  .use(reactI18nextModule as any) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    // lng: \"en\",\r\n    lng: navigator.language || (navigator as any).userLanguage,\r\n    fallbackLng: \"en\", // use en if detected lng is not available\r\n\r\n    keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    }\r\n  });\r\n\r\nexport default i18n;","import { createContext } from \"react\";\r\n\r\nexport interface IUser {\r\n    logged: boolean,\r\n    email?: string,\r\n}\r\n\r\nexport interface IGlobalContext {\r\n    user: IUser,\r\n    setContext?: React.Dispatch<React.SetStateAction<IGlobalContext>>,\r\n}\r\n\r\nexport const GlobalContext = createContext<IGlobalContext | null>(null);","import React from \"react\";\r\nimport { TextField as TextFieldCore, InputBase, Grid, GridSize } from \"@material-ui/core\";\r\n\r\ninterface iTextField {\r\n    label?: string,\r\n    name?: string,\r\n    value?: string,\r\n    placeholder?: string,\r\n    onChange?: (name: string, value: string) => void,\r\n    variant?: \"filled\" | \"outlined\",\r\n    password?: boolean,\r\n    multiline?: boolean,\r\n    fixedLabel?: boolean,\r\n    rows?: number,\r\n    fullwidth?: boolean,\r\n    naked?: boolean,\r\n    gridItem?: boolean,\r\n    readOnly?: boolean\r\n    size?: number,\r\n    error?: string,\r\n    disabled?: boolean,\r\n}\r\n\r\nfunction TextField(props: iTextField) {\r\n\r\n    const _onChange = (e: any) => {\r\n        if (props.onChange && props.name) {\r\n            props.onChange(props.name, e.target.value);\r\n        } else {\r\n            console.warn(\"Props.name and Props.onChange not passed \")\r\n        }\r\n    }\r\n\r\n    // const error = String(props.error) == \"\"? false: true;\r\n    const error = typeof props.error === \"boolean\" ? props.error : false;\r\n\r\n    if (props.naked) {\r\n        return <InputBase value={props.value} type={props.password ? \"password\" : \"text\"} placeholder={props.placeholder} onChange={_onChange} multiline={props.multiline} rows={props.rows} fullWidth={props.fullwidth} />\r\n    }\r\n\r\n    if (props.size) {\r\n        return (\r\n            <Grid item xs={12} sm={Number(props.size) as GridSize}  >\r\n                <TextFieldCore error={error} InputProps={{\r\n                    readOnly: props.readOnly,                    \r\n                }} disabled={props.disabled} InputLabelProps={{shrink: props.fixedLabel}} variant={props.variant} label={props.label} value={props.value} type={props.password ? \"password\" : \"text\"} placeholder={props.placeholder} onChange={_onChange} multiline={props.multiline} rows={props.rows} fullWidth\r\n                />\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <TextFieldCore error={error} disabled={props.disabled} InputLabelProps={{shrink: props.fixedLabel}} variant={props.variant} label={props.label} value={props.value} type={props.password ? \"password\" : \"text\"} placeholder={props.placeholder} onChange={_onChange} multiline={props.multiline} rows={props.rows} fullWidth={props.fullwidth} />\r\n    )\r\n}\r\n\r\nexport default TextField;\r\n","export enum COLORS {\r\n    DEFAULT_ICON_COLOR = \"rgba(0, 0, 0, 0.54)\",\r\n    PRIMARY = \"#3f51b5\",\r\n    PRIMARY_DARK = \"#2d3a87\",\r\n    CASH = \"green\",\r\n    GRAY = \"#dcdde1\",\r\n    DARK_GRAY = \"#7f8c8d\",\r\n    RED = \"#e84118\"\r\n}\r\n\r\nexport enum Routes {\r\n    Screen1 = \"/\",\r\n}\r\n\r\nexport enum Keys {\r\n    email = \"email\"\r\n}","import React from \"react\";\r\n\r\ninterface IProps {\r\n    url: string,\r\n    width?: number | string,\r\n    height?: number | string,\r\n    style?: any\r\n}\r\n\r\nfunction Image(props: IProps) {\r\n    return (\r\n        <img src={props.url} width={props.width} height={props.height} style={props.style} />\r\n    )\r\n}\r\n\r\nexport default Image;","import styled from '@emotion/styled'\r\nimport { Drawer_size } from '../utils/constants';\r\nimport { COLORS } from '../utils/enums';\r\n\r\n\r\nconst RowView = styled.div({\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\"\r\n})\r\n\r\nconst DrawerView = styled.div({\r\n    width: Drawer_size\r\n})\r\n\r\nconst NavigationView = styled.div({\r\n    flex: 1,\r\n})\r\n\r\nconst ContentView = styled.div({\r\n    padding: 10\r\n})\r\n\r\nconst Subtitle = styled.h5((props: { marginLeft?: number, centered?: boolean, color?: string, bold?: boolean }) => ({\r\n    margin: 0,\r\n    color: props.color ? props.color : undefined, fontWeight: props.bold ? \"bold\" : 400,\r\n    marginLeft: props.marginLeft,\r\n    textAlign: props.centered ? \"center\" : undefined,\r\n}))\r\n\r\nconst Price = styled.h5({\r\n    margin: 0, color: COLORS.CASH, fontWeight: 500, fontSize: 18\r\n})\r\n\r\nconst Body = styled.p({\r\n    margin: 0, fontWeight: 400, fontSize: 18\r\n})\r\n\r\nconst Title = styled.h1((props: { centered?: boolean, bold?: boolean, color?: string, margin?: string | number, size?: string | number, clickeable?: boolean }) => ({\r\n    textAlign: props.centered ? \"center\" : \"left\",\r\n    fontWeight: props.bold ? 'bold' : 400,\r\n    color: props.color ? props.color : \"black\",\r\n    margin: props.margin ? `${props.margin}px` : 0,\r\n    fontSize: props.size ? `${props.size}px` : 22,\r\n    \":hover\": props.clickeable ? {\r\n        color: COLORS.PRIMARY,\r\n        cursor: \"pointer\"\r\n    } : {}\r\n}))\r\n\r\nconst Content = styled.div((props: any) => ({\r\n    display: props.flex ? \"flex\" : undefined,\r\n    alignItems: props.alignItems,\r\n    justifyContent: props.justifyContent\r\n}))\r\n\r\nconst View = styled.div((\r\n    props: {\r\n        centered?: boolean, column?: boolean, row?: boolean, justifyContent?: string, alignItems?: string, color?: any, height?: number | string,\r\n        width?: string | number, fullsize?: boolean, borderRadius?: number, opacity?: number, marginLeft?: number, marginRight?: number, button?: boolean,\r\n        wrap?: boolean, marginTop?: number,\r\n    }) => ({\r\n        display: props.centered || props.column || props.row ? \"flex\" : \"\",\r\n        justifyContent: props.centered ? \"center\" : props.justifyContent ? props.justifyContent : \"\",\r\n        alignItems: props.centered ? \"center\" : props.alignItems ? props.alignItems : undefined,\r\n        backgroundColor: props.color ? props.color : \"white\",\r\n        height: props.fullsize ? \"100vh\" : props.height ? props.height : undefined,\r\n        width: props.fullsize ? \"100%\" : props.width ? props.width : undefined,\r\n        flexDirection: props.column ? \"column\" : props.row ? \"row\" : \"column\",\r\n        borderRadius: props.borderRadius ? props.borderRadius : \"\",\r\n        opacity: props.opacity ? props.opacity : 1,\r\n        marginLeft: props.marginLeft ? props.marginLeft : 0,\r\n        marginRight: props.marginRight ? props.marginRight : 0,\r\n        marginTop: props.marginTop ? props.marginTop : 0,\r\n        cursor: props.button ? \"pointer\" : \"\",\r\n        flexWrap: props.wrap ? \"wrap\" : undefined\r\n\r\n    }))\r\n\r\nconst SquareView = styled.div((props: any) => ({\r\n    width: 300, height: 250,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    boxShadow: \"2px 3px 16px 3px\",\r\n}))\r\n\r\nconst Separator = styled.div((props: { size?: number }) => ({\r\n    marginTop: props.size ? `${props.size}px` : \"10px\"\r\n}))\r\n\r\n\r\nexport {\r\n    RowView,\r\n    DrawerView,\r\n    NavigationView,\r\n    ContentView,\r\n    Title,\r\n    Subtitle,\r\n    Price,\r\n    Body, Separator,\r\n    Content, View, SquareView\r\n}","const Drawer_size = 200;\r\nconst questions = {\r\n    question1: \"Did the talks where you participated meet your expectations?\",\r\n    question2: \"Did the exhibitors show mastery of the subject?\",\r\n    question3: \"Were the event facilities comfortable for you?\",\r\n    question4: \"Do you have any comments for the organizers?\"\r\n}\r\n\r\nconst answers = {\r\n    'Sí': \"Yes\",\r\n    \"Yes\": \"Yes\",\r\n    \"No\": \"No\"\r\n}\r\n\r\nexport {\r\n    Drawer_size,\r\n    questions, answers\r\n}","import { IGlobalContext, IUser } from \"../contexts/global\";\r\n\r\nexport const SetStorage = (key: string, data: string) => {\r\n    window.localStorage.setItem(key, data);\r\n}\r\n\r\nexport const GetStorage = (key: string) => {\r\n    return window.localStorage.getItem(key);\r\n}\r\n\r\nexport const deleteStorage = (key: string) => {\r\n    return window.localStorage.removeItem(key);\r\n}\r\n\r\n\r\nexport const Logout = () => {\r\n    window.localStorage.clear();\r\n    // window.location = \"/auth\"\r\n}\r\n\r\n\r\nexport const isMobile = () => {\r\n    let isMobile = false\r\n    if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\r\n        isMobile = true;\r\n    }\r\n    return isMobile;\r\n}\r\n\r\nexport const setContext = (context: IGlobalContext | null, obj: IUser) => {\r\n    if(context?.setContext) {\r\n        context.setContext({...context, user: {...obj}})\r\n    }\r\n}","import axios from \"axios\";\r\nimport { Keys } from \"./enums\";\r\nimport { GetStorage } from \"./functions\";\r\n\r\nexport async function getProducts(search?: string, minPrice?: number, maxPrice?: number) {\r\n    const data = await axios.get(\"/products\", { params: { search, minPrice, maxPrice } });\r\n    return data.data;\r\n}\r\n\r\nexport async function sendEmail(product: any, callback: (result: any) => void) {\r\n    axios.post(\"/email\", { email: GetStorage(Keys.email), product })\r\n        .then(res => callback(res.data))\r\n        .catch(err => {\r\n            alert(\"Email error: \" + err);\r\n        })\r\n}\r\n\r\nexport async function requestRegister(form: { email: string, password: string, firstName: string, lastName: string, username: string }, callback: (result: any) => void) {\r\n    axios.post(\"/register\", form)\r\n        .then(result => callback(result.data))\r\n        .catch(error => {\r\n            alert(\"Register error: \" + error);\r\n        })\r\n}\r\n\r\nexport async function requestLogin(form: { username: string, password: string }, callback: (result: any) => void) {\r\n    axios.post(\"/login\", form)\r\n        .then(result => callback(result.data))\r\n        .catch(error => {\r\n            alert(\"Login error: \" + error);\r\n        })\r\n}","import React, { useState } from \"react\";\r\nimport { Dialog, DialogContent, DialogActions, Button, Grid } from \"@material-ui/core\";\r\n//@ts-ignore\r\nimport ImageGallery from 'react-image-gallery';\r\n//@ts-ignore\r\nimport 'react-image-gallery/styles/css/image-gallery.css';\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport { Body, Price, Separator, Subtitle, Title } from \"../../globalStyles\";\r\nimport { GetStorage } from \"../../utils/functions\";\r\nimport { Keys } from \"../../utils/enums\";\r\nimport { toast } from \"react-toastify\";\r\nimport { sendEmail } from \"../../utils/api\";\r\n\r\ninterface IModal {\r\n    open: boolean,\r\n    onClose: () => void,\r\n    selectedItem: any\r\n}\r\n\r\nfunction ModalItem(props: IModal | any) {\r\n    const [materials, setMaterials] = useState(\"\");\r\n    const [images, setImages] = useState([]);\r\n    const t = (props as any).t;\r\n\r\n    const onEntering = () => {\r\n        let materials = \"\";\r\n        let images: any = [];\r\n        props.selectedItem[\"Materials and Finishes\"].forEach((item: any) => {\r\n            materials += `${item}, `;\r\n        })\r\n        props.selectedItem.Picture.forEach((item: any) => {\r\n            images.push({\r\n                original: item.url,\r\n                thumbnail: item.thumbnails.small.url\r\n            })\r\n        })\r\n        setMaterials(materials);\r\n        setImages(images)\r\n    }\r\n    const getMoreInfo = () => {\r\n        const email = GetStorage(Keys.email);\r\n        if (email) {\r\n            sendEmail(props.selectedItem, (result: any) => {\r\n                toast[result.error ? \"error\" : \"success\"](t(result.msg));\r\n            })\r\n        } else {\r\n            toast.error(t(\"Must be logged\"))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.onClose} onEntering={onEntering} maxWidth=\"md\" fullWidth >\r\n            <DialogContent>\r\n                {/* <Typography>Soft Dog Pendant</Typography> */}\r\n                <Grid container spacing={1}>\r\n                    <Grid item sm={6}>\r\n                        <ImageGallery items={images} />\r\n                        <Separator size={40} />\r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <Title>{props.selectedItem.Name}</Title>\r\n                        <Subtitle>Size {props.selectedItem[\"Units In Store\"]}</Subtitle>\r\n                        <Subtitle>{props.selectedItem.Type}</Subtitle>\r\n                        <Price>US ${props.selectedItem['Unit Cost']}</Price>\r\n                        <Body>{props.selectedItem.Description.substring(0, 300)}...</Body>\r\n                        <Subtitle bold>{t(\"Materials\")}</Subtitle>\r\n                        <Subtitle>{materials}</Subtitle> <Separator />\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={getMoreInfo} >{t(\"Get More Information\")}</Button>\r\n                        <Separator size={10} />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button color=\"secondary\" onClick={props.onClose} >{t(\"Close\")}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n    )\r\n}\r\n\r\nexport default withNamespaces()(ModalItem);","import React, { useEffect, useState } from \"react\";\r\nimport { Dialog, DialogTitle, DialogContent, FormControl, DialogActions, Button, ListItemSecondaryActionClassKey, Paper, Grid, CircularProgress, IconButton, Icon } from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n//Custom components\r\nimport TextField from \"../../components/_textField\";\r\nimport TextPicker from \"../../components/_textSelect\";\r\n//Utils\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport { GetStorage, SetStorage } from \"../../utils/functions\";\r\nimport { COLORS } from \"../../utils/enums\";\r\nimport Image from \"../../components/image\";\r\nimport { Subtitle, Title, Price, Body, Content, View } from \"../../globalStyles\";\r\n\r\nimport ModalItem from \"./modalItem\";\r\nimport { getProducts } from \"../../utils/api\";\r\n\r\nconst url = \"https://images.contentful.com/5de70he6op10/7KotRtmFAvP7OWLTE7PHjH/93bacf07d554c2f56531e16af54a3cd4/FurnitureGateway_03_sectionals.jpg\";\r\n\r\nfunction HomeView(props: any) {\r\n    // const [form, setForm] = useState({ name: \"Miguel\", lastname: \"Paulino\", phone: \"809413265\" });\r\n    const [itemModal, setItemModal] = useState(false);\r\n    const [inputs, setInputs] = useState({ search: \"\", lowPrice: \"\", highPrice: \"\" });\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [data, setData] = useState([]);\r\n    const [backupData, setBackupData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const t = (props as any).t;\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            const data = await getProducts();\r\n            console.log(\"Data: \", data)\r\n            setData(data);\r\n            setBackupData(data);\r\n            setLoading(false);\r\n        }\r\n        getData();\r\n    }, [])\r\n\r\n    const onViewMore = (item: any) => {\r\n        setItemModal(true);\r\n        setSelectedItem(item)\r\n    }\r\n\r\n    const closeViewMore = () => setItemModal(false);\r\n\r\n    const onFilter = async (value: string) => {\r\n        let _data: never[] = [];\r\n        if (value.length) {\r\n            // _data = data.filter((item: any) => item.Name.toLowerCase().startsWith(value.toLowerCase()));\r\n            _data = await getProducts(value);\r\n        } else {\r\n            _data = [...backupData];\r\n            setInputs({ ...inputs, search: \"\", lowPrice: \"\", highPrice: \"\" });\r\n        }\r\n        setData([..._data]);\r\n    }\r\n\r\n    const onFilterPrice = () => {\r\n        const low: number = parseInt(inputs.lowPrice);\r\n        const high: number = parseInt(inputs.highPrice);\r\n        if (low > 0 && high > 0) {\r\n            let _data = [];\r\n            if (high < low) {\r\n                setInputs({ ...inputs, lowPrice: high.toString(), highPrice: low.toString() });\r\n                _data = data.filter((item: any) => item[\"Unit Cost\"] >= high && item[\"Unit Cost\"] <= low);\r\n            } else {\r\n                _data = data.filter((item: any) => item[\"Unit Cost\"] >= low && item[\"Unit Cost\"] <= high);\r\n            }\r\n            setData([..._data]);\r\n        }\r\n        if (isNaN(low) && high > 0) {\r\n            let _data = [];\r\n            _data = data.filter((item: any) => item[\"Unit Cost\"] <= high);\r\n            setData([..._data]);\r\n        }\r\n        if (isNaN(high) && low > 0) {\r\n            let _data = [];\r\n            _data = data.filter((item: any) => item[\"Unit Cost\"] >= low);\r\n            setData([..._data]);\r\n        }\r\n    }\r\n\r\n    const handleInputs = (name: string, value: string) => {\r\n        setInputs({ ...inputs, [name]: value });\r\n        switch (name) {\r\n            case 'search': onFilter(value); break;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* <Grid container justify=\"flex-start\" > */}\r\n            <Grid container justify=\"flex-start\" spacing={1} >\r\n                <Grid item sm={4} xs={12} >\r\n                    <Paper style={{ padding: 10 }}>\r\n                        <TextField fullwidth variant=\"outlined\" label=\"Search\" value={inputs.search} name=\"search\" onChange={handleInputs} />\r\n                        <Subtitle>Price</Subtitle>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item sm={4}>\r\n                                <TextField fullwidth variant=\"outlined\" label=\"Min\" value={inputs.lowPrice} name=\"lowPrice\" onChange={handleInputs} />\r\n                            </Grid>\r\n                            <Grid item sm={4}>\r\n                                <TextField fullwidth variant=\"outlined\" label=\"High\" value={inputs.highPrice} name=\"highPrice\" onChange={handleInputs} />\r\n                            </Grid>\r\n                            <Grid item sm={2}>\r\n                                <View centered>\r\n                                    <IconButton onClick={onFilterPrice} >\r\n                                        <Icon fontSize=\"large\" >search</Icon>\r\n                                    </IconButton>\r\n                                </View>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button onClick={() => onFilter(\"\")} >Clear filter</Button>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item sm={8} xs={12}>\r\n                    <View centered >\r\n                        {loading && <CircularProgress />}\r\n                    </View>\r\n                    {data.map((item: any, key) => {\r\n                        return (\r\n                            <Paper style={{ padding: 10, marginBottom: 10, backgroundColor: item[\"Units In Store\"] ? undefined : COLORS.GRAY }} >\r\n                                <Grid container spacing={1} justify=\"flex-start\" >\r\n                                    <Grid item sm={3}>\r\n                                        <Image url={item.Picture[0].thumbnails.large.url} width=\"100%\" />\r\n                                        <View color={item[\"Units In Store\"] ? COLORS.DARK_GRAY : COLORS.RED} marginTop={-5} >\r\n                                            {item[\"Units In Store\"] > 0 && <Subtitle centered color=\"white\">Size {item['Size (WxLxH)']}</Subtitle>}\r\n                                            {!item[\"Units In Store\"] && <Subtitle centered color=\"white\">No stocks available</Subtitle>}\r\n                                        </View>\r\n                                    </Grid>\r\n                                    <Grid item sm={8}>\r\n                                        <Content flex alignItems=\"center\" >\r\n                                            <Title clickeable>{item.Name}</Title>\r\n                                        </Content>\r\n                                        <Subtitle>{item.Type}</Subtitle>\r\n                                        <Price>US ${item['Unit Cost']}</Price>\r\n                                        <Body>{item.Description.substr(0, 200)}...</Body>\r\n                                        <Button onClick={() => onViewMore(item)} >View more</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Grid>\r\n            {selectedItem && <ModalItem open={itemModal} onClose={closeViewMore} selectedItem={selectedItem} />}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withNamespaces()(HomeView);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, Icon, Typography, IconButton, Slide, Button } from '@material-ui/core';\r\n\r\ninterface ICustomAppBar {\r\n  title: string,\r\n  rightButtons: { text: string, onClick: () => void }[]\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction CustomAppBar(props: ICustomAppBar) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root} style={{ padding: 10 }} >\r\n      <AppBar position=\"static\" style={{ borderRadius: 25 }} >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {props.title}\r\n          </Typography>\r\n          {props.rightButtons.map((button, key) => {\r\n            return <Button color=\"inherit\" onClick={button.onClick} >{button.text}</Button>\r\n          })}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomAppBar;","const models = {\r\n    register: {\r\n        email: \"\", password: \"\", firstName: \"\", lastName: \"\", username: \"\"\r\n    },\r\n    login: {\r\n        username: \"\", password: \"\"\r\n    }\r\n}\r\nexport default models;\r\n// export models;","import React, { useState } from \"react\";\r\nimport { Dialog, DialogContent, DialogActions, Button, Grid } from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport { withNamespaces } from \"react-i18next\";\r\n//Custom components\r\nimport TextField from \"../components/_textField\";\r\n//Utils\r\nimport { requestRegister } from \"../utils/api\";\r\nimport models from \"../utils/models\";\r\nimport { Title } from \"../globalStyles\";\r\n\r\ninterface IModal {\r\n    open: boolean,\r\n    onClose: () => void,\r\n}\r\n\r\nfunction ModalItem(props: IModal | any) {\r\n    const [form, setForm] = useState({ ...models.register });\r\n    const t = (props as any).t;\r\n\r\n\r\n    const onEntering = () => {\r\n        setForm({ ...models.register });\r\n    }\r\n\r\n    const handleInputs = (name: string, value: string) => {\r\n        setForm({ ...form, [name]: value });\r\n    }\r\n\r\n    const onRegister = () => {\r\n        requestRegister(form, (result: any) => {\r\n            toast[result.error ? \"error\" : \"success\"](t(result.msg));\r\n            if (!result.error) {\r\n                props.onClose();\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <Dialog open={props.open} onClose={props.onClose} onEntering={onEntering} maxWidth=\"sm\" fullWidth >\r\n            <DialogContent>\r\n                <Title>{t(\"Register\")}</Title>\r\n                <TextField size={2} label={t(\"Username\")} value={form.username} name=\"username\" onChange={handleInputs} />\r\n                <Grid container spacing={1}>\r\n                    <TextField size={6} label={t(\"First Name\")} value={form.firstName} name=\"firstName\" onChange={handleInputs} />\r\n                    <TextField size={6} label={t(\"Last Name\")} value={form.lastName} name=\"lastName\" onChange={handleInputs} />\r\n                    <TextField size={6} label={t(\"Email\")} value={form.email} name=\"email\" onChange={handleInputs} />\r\n                    <TextField size={6} label={t(\"Password\")} value={form.password} name=\"password\" password onChange={handleInputs} />\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button color=\"secondary\" onClick={props.onClose} >{t(\"Close\")}</Button>\r\n                <Button color=\"primary\" onClick={onRegister} >{t(\"Register\")}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n    )\r\n}\r\n\r\nexport default withNamespaces()(ModalItem);","import React, { useContext, useState } from \"react\";\r\nimport { Dialog, DialogContent, DialogActions, Button, Grid } from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport { withNamespaces } from \"react-i18next\";\r\n//Custom components\r\nimport TextField from \"../components/_textField\";\r\n//Utils\r\nimport { requestLogin } from \"../utils/api\";\r\nimport models from \"../utils/models\";\r\nimport { Title } from \"../globalStyles\";\r\nimport { setContext, SetStorage } from \"../utils/functions\";\r\nimport { Keys } from \"../utils/enums\";\r\nimport { GlobalContext } from \"../contexts/global\";\r\n\r\ninterface IModal {\r\n    open: boolean,\r\n    onClose: () => void,\r\n}\r\n\r\nfunction ModalItem(props: IModal | any) {\r\n    const [form, setForm] = useState({ ...models.login });\r\n    const globalContext = useContext(GlobalContext);\r\n    const t = (props as any).t;\r\n\r\n\r\n    const onEntering = () => {\r\n        setForm({ ...models.login });\r\n    }\r\n\r\n    const handleInputs = (name: string, value: string) => {\r\n        setForm({ ...form, [name]: value });\r\n    }\r\n\r\n    const onLogin = () => {\r\n        requestLogin(form, (result: any) => {\r\n            toast[result.error ? \"error\" : \"success\"](t(result.msg));\r\n            if (!result.error) {\r\n                props.onClose();\r\n                SetStorage(Keys.email, result.email);\r\n                setContext(globalContext, { email: result.email, logged: true });\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <Dialog open={props.open} onClose={props.onClose} onEntering={onEntering} maxWidth=\"xs\" fullWidth >\r\n            <DialogContent>\r\n                <Title>Log In</Title>\r\n                <Grid container spacing={1}>\r\n                    <TextField size={6} label={t(\"Username\")} value={form.username} name=\"username\" onChange={handleInputs} />\r\n                    <TextField size={6} label={t(\"Password\")} value={form.password} name=\"password\" password onChange={handleInputs} />\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button color=\"secondary\" onClick={props.onClose} >{t(\"Close\")}</Button>\r\n                <Button color=\"primary\" onClick={onLogin} >{t(\"Go\")}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n    )\r\n}\r\n\r\nexport default withNamespaces()(ModalItem);","import React, { useContext, useEffect, useState } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport {\r\n    BrowserRouter as Router, Switch, Route, Redirect,\r\n} from \"react-router-dom\";\r\n//Screens\r\nimport Home from \"./home\";\r\n//Custom components\r\nimport CustomAppBar from '../components/appbar';\r\n//Utils\r\nimport { withNamespaces } from 'react-i18next';\r\n//Custom styles\r\nimport { RowView, NavigationView, ContentView } from '../globalStyles';\r\nimport { GlobalContext } from '../contexts/global';\r\n//Modals\r\nimport ModalRegister from \"../modals/register\";\r\nimport ModalLogin from \"../modals/login\";\r\nimport { deleteStorage, setContext } from '../utils/functions';\r\nimport { Keys } from '../utils/enums';\r\n\r\nfunction App({ t }: any) {\r\n    const [modals, setModals] = useState({ register: false, login: false });\r\n    const [appbarButtons, setAppbarButtons] = useState([]);\r\n    const globalContext = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        let buttons = [];\r\n        console.log(\"Aqui: \", globalContext)\r\n        if (globalContext?.user.logged) {\r\n            buttons = [({ text: t(\"Log out\"), onClick: logout })]\r\n        } else {\r\n            buttons = [{ text: t(\"Log In\"), onClick: () => openModal(\"login\") },\r\n            { text: t(\"Register\"), onClick: () => openModal(\"register\") }]\r\n        }\r\n        setAppbarButtons(buttons as any);\r\n    }, [globalContext]);\r\n\r\n\r\n    const logout = () => {\r\n        deleteStorage(Keys.email);\r\n        setContext(globalContext, { email: \"\", logged: false });\r\n    }\r\n\r\n    const openModal = (name: string) => setModals({ ...modals, [name]: true });\r\n    const closeModal = (name: string) => setModals({ ...modals, [name]: false });\r\n\r\n    return (\r\n        <Router>\r\n            <React.Fragment >\r\n                <RowView >\r\n                    <NavigationView>\r\n                        <CustomAppBar title=\"E Commerce\" rightButtons={appbarButtons} />\r\n                        <ContentView>\r\n                            <Switch>\r\n                                <Route path=\"/\" exact component={Home} />\r\n                            </Switch>\r\n                        </ContentView>\r\n                    </NavigationView>\r\n                </RowView>\r\n                <ToastContainer />\r\n            </React.Fragment>\r\n            <ModalRegister open={modals.register} onClose={() => closeModal(\"register\")} />\r\n            <ModalLogin open={modals.login} onClose={() => closeModal(\"login\")} />\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default withNamespaces()(App);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { GlobalContext, IGlobalContext } from \"./contexts/global\";\r\n//Containers\r\nimport Container from \"./routes/container\";\r\nimport { Keys } from \"./utils/enums\";\r\nimport { GetStorage } from \"./utils/functions\";\r\n\r\n\r\nfunction App() {\r\n  const auxSetContext = (object: any) => {\r\n    setContext({ ...context, ...object });\r\n  }\r\n  const [context, setContext] = useState<IGlobalContext>({\r\n    user: { logged: false, email: \"\" },\r\n    setContext: auxSetContext\r\n  })\r\n\r\n  useEffect(() => {\r\n    const email = GetStorage(Keys.email);\r\n    if (email) setContext({ ...context, user: {...context.user, logged: true} })\r\n  }, [])\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{ ...context, setContext: auxSetContext }} >\r\n      <Container />\r\n      <ToastContainer />\r\n    </GlobalContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './utils/i18n.tsx';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\r\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}